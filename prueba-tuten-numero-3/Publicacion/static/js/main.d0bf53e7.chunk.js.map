{"version":3,"sources":["logo.svg","PruebaTunenFullStack/WS_Generico.js","PruebaTunenFullStack/Util.js","PruebaTunenFullStack/ApiREST.js","App.js","reportWebVitals.js","index.js"],"names":["Informacion_WS","a","info","Method","method","headers","Headers","body","Body","fetch","URL","then","response","undefined","status","json","console","log","catch","err","error","valorRespuesta","WS_Generico","Comprobacion","consulta","valorListado","includes","valorBusqueda","split","trim","parseInt","Informacion_WS_PutLogin","require","Informacion_WS_GetBookings","Consumir_API_REST","props","LlamadoServicioWeb","setState","open","respuesta_WS_PutLogin","token","TokenName","respuesta_WS_GetBookings","listaClientes","forEach","valor","i","bookingId","tutenUserProfessional","tutenUser1","firstName","lastName","bookingTime","locationId","streetAddress","bookingPrice","nombre","apellido","Date","year","getFullYear","month","getMonth","time","getDate","getHours","getMinutes","getSeconds","push","BookingId","Cliente","Creacion","Direccion","Precio","ListaClientes","ListaOriginalClientes","BusquedaEnTabla","textoBusqueda","toUpperCase","replace","nuevaListaCliente","state","res","consulta1","consulta2","GenerarErrorCuadroBusqueda","row","esID","esPrecio","arreRes","ValidarBusqueda","busqueda","arre","n","test","nuevaListaClientes","valorNumerico","labelTextoBusqueda","Button","color","onClick","this","ButtonToolbar","ButtonGroup","TextField","id","label","variant","value","onChange","event","target","length","Table","autoWidth","striped","bordered","hover","small","responsive","textWhite","slice","map","show","showCancel","showConfirm","showCloseButton","title","type","height","width","timeout","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0bf53e7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","async function WS_Generico (Informacion_WS) {\r\n     \r\n    let info ;\r\n\r\n    if(Informacion_WS.Method == 'GET'){\r\n      info = {\r\n        method: Informacion_WS.Method,          \r\n        headers: new Headers(Informacion_WS.Headers)\r\n      }\r\n    }else{\r\n      info = {\r\n        method: Informacion_WS.Method,  \r\n        body: Informacion_WS.Body,\r\n        headers: new Headers(Informacion_WS.Headers)\r\n      }\r\n    }\r\n    \r\n    let valorRespuesta = await fetch(Informacion_WS.URL, info)\r\n      .then(function (response) {\r\n        if(response !== null && response !== undefined && response.status === 200){\r\n            return response.json(); \r\n          }else{\r\n  \r\n            if(response === null){\r\n              console.log('Valor de la respuesta  igual a nulo.');\r\n            }else if(response === undefined){\r\n              console.log('Valor de la respuesta igual a (undefined)');\r\n            }else {\r\n              console.log('Error estatus nÃºmero : ' + response.status);\r\n            }         \r\n  \r\n            return 'ERROR';\r\n          }              \r\n      })      \r\n      .catch(function (err) {\r\n        console.error(err);\r\n      });\r\n\r\n      return valorRespuesta;\r\n}\r\n\r\nexport default WS_Generico;","export const  isNumber = (n)=> {\r\n  return /^-?[\\d.]+(?:e-?\\d+)?$/.test(n);\r\n}\r\n\r\n//export default isNumber;\r\n\r\nexport const  Comprobacion = (consulta, valorListado) => {\r\n    if (consulta.includes(\">=\") ) {\r\n        let valorBusqueda = consulta.split(\">=\")[1].trim();\r\n        if(parseInt(valorBusqueda) >= parseInt(valorListado)){\r\n          return true;\r\n        }            \r\n      } else if (consulta.includes(\"<=\")) {\r\n        let valorBusqueda = consulta.split(\"<=\")[1].trim();\r\n        if(parseInt(valorBusqueda) <= parseInt(valorListado)){\r\n          return true;\r\n        }             \r\n      } else if (consulta.includes(\">\")) {\r\n        let valorBusqueda = consulta.split(\">\")[1].trim();\r\n        if(parseInt(valorBusqueda) > parseInt(valorListado)){\r\n          return true;\r\n        }            \r\n      } else if (consulta.includes(\"<\")) {\r\n        let valorBusqueda = consulta.split(\"<\")[1].trim();\r\n        if(parseInt(valorBusqueda) < parseInt(valorListado)){\r\n          return true;\r\n        }             \r\n      } else if (consulta.includes(\"==\")) {\r\n        let valorBusqueda = consulta.split(\"==\")[1].trim();\r\n        if(parseInt(valorBusqueda) == parseInt(valorListado)){\r\n          return true;\r\n        }            \r\n      }\r\n\r\n  return false;\r\n}\r\n\r\n//export default Comprobacion;\r\n","import React, { Component } from \"react\";\r\nimport WS_Generico from \"./WS_Generico\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { Table } from \"reactstrap\";\r\nimport { isNumber, Comprobacion } from \"./Util\";\r\n\r\n// Dialog\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Button, ButtonGroup, ButtonToolbar } from \"reactstrap\";\r\n\r\nvar Informacion_WS_PutLogin = require(\"./Informacion_WS_PutLogin.json\");\r\nvar Informacion_WS_GetBookings = require(\"./Informacion_WS_GetBookings.json\");\r\n\r\nclass Consumir_API_REST extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ListaClientes: [],\r\n      ListaOriginalClientes: [],\r\n      open: false,\r\n      textoBusqueda: \"\",\r\n      labelTextoBusqueda: \"Buscar en la tabla\",\r\n      error: false,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br></br>\r\n        <br></br>\r\n        <Button color={\"primary\"} onClick={this.LlamadoServicioWeb}>\r\n          Buscar\r\n        </Button>\r\n        <br></br>\r\n        <br></br>\r\n        <ButtonToolbar>\r\n          <ButtonGroup>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              error={this.state.error}\r\n              label={this.state.labelTextoBusqueda}\r\n              variant=\"outlined\"\r\n              value={this.state.textoBusqueda}\r\n              onChange={(event) => {\r\n                this.setState({\r\n                  labelTextoBusqueda: \"Buscar en la tabla\",\r\n                  error: false,\r\n                  textoBusqueda: event.target.value,\r\n                });\r\n\r\n                console.log(event.target.value);\r\n              }}\r\n            />\r\n          </ButtonGroup>\r\n\r\n          <ButtonGroup>\r\n            <Button\r\n              color={\"primary\"}\r\n              onClick={() => {\r\n                let textoBusqueda = this.state.textoBusqueda;\r\n\r\n                if (textoBusqueda.length === 0) {\r\n                  this.GenerarErrorCuadroBusqueda(\"Debe indicar una condiciÃ³n\");\r\n                  return;\r\n                }\r\n\r\n                if (this.state.ListaClientes.length === 0) {\r\n                  this.GenerarErrorCuadroBusqueda(\"Debe buscar datos\");\r\n                  return;\r\n                }\r\n\r\n                this.BusquedaEnTabla(textoBusqueda);\r\n              }}\r\n            >\r\n              Buscar\r\n            </Button>\r\n          </ButtonGroup>\r\n\r\n          <ButtonGroup>\r\n            <Button\r\n              color={\"primary\"}\r\n              onClick={() => {\r\n                this.setState({\r\n                  labelTextoBusqueda: \"Buscar en la tabla\",\r\n                  error: false,\r\n                  textoBusqueda: \"\",\r\n                  ListaClientes: this.state.ListaOriginalClientes,\r\n                });\r\n              }}\r\n            >\r\n              Limpiar\r\n            </Button>\r\n          </ButtonGroup>\r\n        </ButtonToolbar>\r\n        <br></br>\r\n        <br></br>\r\n        <Table autoWidth striped bordered hover small responsive>\r\n          <thead textWhite>\r\n            <tr>\r\n              <th>BookingId</th>\r\n\r\n              <th>Cliente</th>\r\n\r\n              <th>Fecha CreaciÃ³n</th>\r\n\r\n              <th>DirecciÃ³n</th>\r\n\r\n              <th>Precio</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.ListaClientes.slice(0, 100).map((valor) => (\r\n              <tr>\r\n                <td>{valor.BookingId}</td>\r\n                <td>{valor.Cliente}</td>\r\n                <td>{valor.Creacion}</td>\r\n                <td>{valor.Direccion}</td>\r\n                <td>{valor.Precio}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        <SweetAlert\r\n          info\r\n          show={this.state.open}\r\n          showCancel={false}\r\n          showConfirm={false}\r\n          showCloseButton={false}\r\n          title=\"Procesando la informaciÃ³n\"\r\n        >\r\n          Espere mientra se realiza la consulta solicitada\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000} //3 secs\r\n          />\r\n        </SweetAlert>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  LlamadoServicioWeb = async () => {\r\n    this.setState({ open: true });\r\n\r\n    let respuesta_WS_PutLogin = await WS_Generico(Informacion_WS_PutLogin);\r\n\r\n    // El valor 'TokenName' existe por si en algÃºn momento cambia el nombre\r\n    // del parametro en el servicio web y asi no afecte el cÃ³digo.\r\n    let token = respuesta_WS_PutLogin[Informacion_WS_PutLogin.TokenName];\r\n\r\n    Informacion_WS_GetBookings.Headers[\"Token\"] = token;\r\n\r\n    let respuesta_WS_GetBookings = await WS_Generico(\r\n      Informacion_WS_GetBookings\r\n    );\r\n\r\n    let listaClientes = [];\r\n\r\n    respuesta_WS_GetBookings.forEach(function (valor, i) {\r\n      console.log(\"Cliente nÃºmero :\", ++i);\r\n      console.log(\"BookingId : \", valor.bookingId);\r\n      console.log(\r\n        \"Cliente : \",\r\n        valor.tutenUserProfessional.tutenUser1.firstName,\r\n        valor.tutenUserProfessional.tutenUser1.lastName\r\n      );\r\n      console.log(\"CreaciÃ³n : \", valor.bookingTime);\r\n      console.log(\"DirecciÃ³n : \", valor.locationId.streetAddress);\r\n      console.log(\"Precio : \", valor.bookingPrice);\r\n\r\n      let nombre = valor.tutenUserProfessional.tutenUser1.firstName;\r\n      let apellido = valor.tutenUserProfessional.tutenUser1.lastName;\r\n\r\n      var a = new Date(valor.bookingTime);\r\n\r\n      console.log(a);\r\n\r\n      var months = [\r\n        \"Enero\",\r\n        \"Febbrero\",\r\n        \"Marzo\",\r\n        \"Abril\",\r\n        \"Mayo\",\r\n        \"Junio\",\r\n        \"Julio\",\r\n        \"Agosto\",\r\n        \"Septiembre\",\r\n        \"Octubre\",\r\n        \"Noviembre\",\r\n        \"Diciembre\",\r\n      ];\r\n      var year = a.getFullYear();\r\n      var month = months[a.getMonth()];\r\n      var date = a.getDate();\r\n      var hour = a.getHours();\r\n      var min = a.getMinutes();\r\n      var sec = a.getSeconds();\r\n      var time =\r\n        date + \" \" + month + \" \" + year + \" \" + hour + \":\" + min + \":\" + sec;\r\n\r\n      listaClientes.push({\r\n        BookingId: valor.bookingId,\r\n        Cliente: nombre + \" , \" + apellido,\r\n        Creacion: time,\r\n        Direccion: valor.locationId.streetAddress,\r\n        Precio: valor.bookingPrice,\r\n      });\r\n    });\r\n\r\n    console.log(listaClientes);\r\n\r\n    console.log(respuesta_WS_GetBookings);\r\n\r\n    this.setState({\r\n      ListaClientes: listaClientes,\r\n      ListaOriginalClientes: listaClientes,\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  BusquedaEnTabla = (textoBusqueda) => {\r\n    textoBusqueda = textoBusqueda.toUpperCase();\r\n\r\n    textoBusqueda = textoBusqueda.replace(\"&&\", \"AND\");\r\n    textoBusqueda = textoBusqueda.replace(\"&\", \"AND\");\r\n    textoBusqueda = textoBusqueda.replace(\"||\", \"OR\");\r\n    textoBusqueda = textoBusqueda.replace(\"|\", \"OR\");\r\n\r\n    if (!textoBusqueda.includes(\"ID\") && !textoBusqueda.includes(\"PRECIO\")) {\r\n      this.GenerarErrorCuadroBusqueda(\"Formato invÃ¡lido\");\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !textoBusqueda.includes(\">=\") &&\r\n      !textoBusqueda.includes(\"<=\") &&\r\n      !textoBusqueda.includes(\">\") &&\r\n      !textoBusqueda.includes(\"<\") &&\r\n      !textoBusqueda.includes(\"==\")\r\n    ) {\r\n      this.GenerarErrorCuadroBusqueda(\"Formato invÃ¡lido\");\r\n      return;\r\n    }\r\n\r\n    let nuevaListaCliente = [];\r\n\r\n    let listaClientes = this.state.ListaClientes;\r\n\r\n    var respuesta = textoBusqueda.includes(\"AND\");\r\n\r\n    if (respuesta) {\r\n      var res = textoBusqueda.split(\"AND\");\r\n\r\n      let consulta1 = res[0].toUpperCase().trim();\r\n      let consulta2 = res[1].toUpperCase().trim();\r\n\r\n      if (consulta1.includes(\"ID\") && consulta2.includes(\"ID\")) {\r\n        this.GenerarErrorCuadroBusqueda(\"Formato invÃ¡lido\");\r\n        return;\r\n      }\r\n\r\n      if (consulta1.includes(\"PRECIO\") && consulta2.includes(\"PRECIO\")) {\r\n        this.GenerarErrorCuadroBusqueda(\"Formato invÃ¡lido\");\r\n        return;\r\n      }\r\n\r\n      listaClientes.forEach((row) => {\r\n        let esID = false;\r\n        let esPrecio = false;\r\n\r\n        // Se realizan las validaciones suponiendo que lo primero que se\r\n        // consulto el id y despues el precio en una consulta AND ejemplo :\r\n        // id > 3 and precio <= 200.\r\n        if (consulta1.includes(\"ID\")) {\r\n          // Para comparar el id en la bÃºsqueda y el id del registro.\r\n          esID = Comprobacion(consulta1, row.BookingId);\r\n\r\n          // La segunda consulta debe ser por el precio.\r\n\r\n          esPrecio = Comprobacion(consulta2, row.Precio);\r\n        }\r\n        // Ahora hacer lo contrario, suponiendo que primero se\r\n        // consulto el precio y despues el id ejemplo :\r\n        // precio > 100 and id < 2.\r\n        else {\r\n          // Para comparar el precio en la bÃºsqueda y el precio del registro\r\n          esPrecio = Comprobacion(consulta1, row.Precio);\r\n\r\n          // La segunda consulta debe ser por el id.\r\n\r\n          esID = Comprobacion(consulta2, row.BookingId);\r\n        }\r\n\r\n        if (esID && esPrecio) {\r\n          nuevaListaCliente.push(row);\r\n        }\r\n      });\r\n    } else if (textoBusqueda.includes(\"OR\")) {\r\n      let arreRes = textoBusqueda.split(\"OR\");\r\n\r\n      listaClientes.forEach((row) => {\r\n        arreRes.forEach((consulta) => {\r\n          if (\r\n            consulta.includes(\"ID\") &&\r\n            Comprobacion(consulta, row.BookingId)\r\n          ) {\r\n            nuevaListaCliente.push(row);\r\n          } else if (Comprobacion(consulta, row.Precio)) {\r\n            nuevaListaCliente.push(row);\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      nuevaListaCliente = this.ValidarBusqueda(textoBusqueda);\r\n    }\r\n\r\n    if (nuevaListaCliente !== undefined && nuevaListaCliente !== null) {\r\n      this.setState({ ListaClientes: nuevaListaCliente });\r\n    }\r\n  };\r\n\r\n  ValidarBusqueda = (busqueda) => {\r\n    let arre = [];\r\n\r\n    if (busqueda.includes(\">=\")) {\r\n      arre = busqueda.split(\">=\");\r\n    } else if (busqueda.includes(\"<=\")) {\r\n      arre = busqueda.split(\"<=\");\r\n    } else if (busqueda.includes(\">\")) {\r\n      arre = busqueda.split(\">\");\r\n    } else if (busqueda.includes(\"<\")) {\r\n      arre = busqueda.split(\"<\");\r\n    } else if (busqueda.includes(\"==\")) {\r\n      arre = busqueda.split(\"==\");\r\n    }\r\n\r\n    if (!isNumber(arre[1].trim())) {\r\n      this.GenerarErrorCuadroBusqueda(\"Se debe buscar por nÃºmero\");\r\n      return;\r\n    }\r\n\r\n    let ListaClientes = this.state.ListaClientes;\r\n\r\n    let nuevaListaClientes = [];\r\n\r\n    let valorNumerico = arre[1].trim();\r\n\r\n    if (busqueda.includes(\">=\")) {\r\n      ListaClientes.forEach((row) => {\r\n        if (\r\n          arre[0].toUpperCase().includes(\"ID\") &&\r\n          parseInt(row.BookingId) >= parseInt(valorNumerico)\r\n        ) {\r\n          nuevaListaClientes.push(row);\r\n        } else if (\r\n          arre[0].toUpperCase().includes(\"PRECIO\") &&\r\n          parseInt(row.Precio) >= parseInt(valorNumerico)\r\n        ) {\r\n          nuevaListaClientes.push(row);\r\n        }\r\n      });\r\n    } else if (busqueda.includes(\"<=\")) {\r\n      ListaClientes.forEach((row) => {\r\n        if (\r\n          arre[0].toUpperCase().includes(\"ID\") &&\r\n          parseInt(row.BookingId) <= parseInt(valorNumerico)\r\n        ) {\r\n          nuevaListaClientes.push(row);\r\n        } else if (\r\n          arre[0].toUpperCase().includes(\"PRECIO\") &&\r\n          parseInt(row.Precio) <= parseInt(valorNumerico)\r\n        ) {\r\n          nuevaListaClientes.push(row);\r\n        }\r\n      });\r\n    } else if (busqueda.includes(\">\")) {\r\n      ListaClientes.forEach((row) => {\r\n        if (\r\n          arre[0].toUpperCase().includes(\"ID\") &&\r\n          parseInt(row.BookingId) > parseInt(valorNumerico)\r\n        ) {\r\n          nuevaListaClientes.push(row);\r\n        } else if (\r\n          arre[0].toUpperCase().includes(\"PRECIO\") &&\r\n          parseInt(row.Precio) > parseInt(valorNumerico)\r\n        ) {\r\n          nuevaListaClientes.push(row);\r\n        }\r\n      });\r\n    } else if (busqueda.includes(\"<\")) {\r\n      ListaClientes.forEach((row) => {\r\n        if (\r\n          arre[0].toUpperCase().includes(\"ID\") &&\r\n          parseInt(row.BookingId) < parseInt(valorNumerico)\r\n        ) {\r\n          nuevaListaClientes.push(row);\r\n        } else if (\r\n          arre[0].toUpperCase().includes(\"PRECIO\") &&\r\n          parseInt(row.Precio) < parseInt(valorNumerico)\r\n        ) {\r\n          nuevaListaClientes.push(row);\r\n        }\r\n      });\r\n    } else if (busqueda.includes(\"==\")) {\r\n      ListaClientes.forEach((row) => {\r\n        if (\r\n          arre[0].toUpperCase().includes(\"ID\") &&\r\n          parseInt(row.BookingId) == parseInt(valorNumerico)\r\n        ) {\r\n          nuevaListaClientes.push(row);\r\n        } else if (\r\n          arre[0].toUpperCase().includes(\"PRECIO\") &&\r\n          parseInt(row.Precio) == parseInt(valorNumerico)\r\n        ) {\r\n          nuevaListaClientes.push(row);\r\n        }\r\n      });\r\n    }\r\n\r\n    return nuevaListaClientes;\r\n  };\r\n\r\n  GenerarErrorCuadroBusqueda = (labelTextoBusqueda) => {\r\n    this.setState({\r\n      labelTextoBusqueda: labelTextoBusqueda,\r\n      error: true,\r\n    });\r\n  };\r\n}\r\n\r\nexport default Consumir_API_REST;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Consumir_API_REST from './PruebaTunenFullStack/ApiREST';\n\nfunction App() {\n  return (\n    <div className=\"App\">     \n      <Consumir_API_REST/> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}